jobs:
  main:
    container:
      image: ${{ inputs.TEST_IMAGE || 'openvidu/openvidu-test-e2e:22.04' }}
      volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/openvidu:/opt/openvidu
    env:
      CHROME_VERSION: ${{ inputs.CHROME_VERSION || 'latest' }}
      DOCKER_RECORDING_VERSION: ${{ inputs.DOCKER_RECORDING_VERSION || 'default' }}
      EDGE_VERSION: ${{ inputs.EDGE_VERSION || 'latest' }}
      FIREFOX_VERSION: ${{ inputs.FIREFOX_VERSION || 'latest' }}
      KURENTO_JAVA_COMMIT: ${{ inputs.KURENTO_JAVA_COMMIT || 'default' }}
      KURENTO_MEDIA_SERVER_IMAGE: ${{ inputs.KURENTO_MEDIA_SERVER_IMAGE || 'kurento/kurento-media-server:7.0.1'
        }}
      KURENTO_SNAPSHOTS_URL: ${{ secrets.KURENTO_SNAPSHOTS_URL }}
      TEST_IMAGE: ${{ inputs.TEST_IMAGE || 'openvidu/openvidu-test-e2e:22.04' }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Setup scripts
      run: 'curl -sOJ --output-dir /opt https://raw.githubusercontent.com/OpenVidu/openvidu/master/ci-scripts/commons/build.sh

        curl -sOJ --output-dir /opt https://raw.githubusercontent.com/OpenVidu/openvidu/master/ci-scripts/commons/test-utils.sh

        cp ci-scripts/openvidu-e2e-tests.sh /opt/openvidu-e2e-tests.sh

        find /opt/*.sh -type f -print0 | xargs -0 chmod u+x

        '
    - continue-on-error: true
      name: Clean environment
      run: /opt/build.sh --clean-environment
    - continue-on-error: true
      name: Prepare test environment
      run: /opt/test-utils.sh --prepare-test-environment "${TEST_IMAGE}"
    - continue-on-error: true
      name: Check and prepare kurento snapshots
      run: /opt/build.sh --check-and-prepare-kurento-snapshot
    - continue-on-error: true
      if: ${{ env.KURENTO_JAVA_COMMIT != 'default'}}
      name: Use specific kurento-java commit
      run: /opt/test-utils.sh --use-specific-kurento-java-commit
    - continue-on-error: true
      name: Build openvidu-browser
      run: /opt/build.sh --build-openvidu-browser
    - continue-on-error: true
      name: Build openvidu-node-client
      run: /opt/build.sh --build-openvidu-node-client
    - continue-on-error: true
      name: Build openvidu-java-client
      run: /opt/build.sh --build-openvidu-java-client
    - continue-on-error: true
      name: Build openvidu-parent
      run: /opt/build.sh --build-openvidu-parent
    - continue-on-error: true
      name: Build openvidu-testapp
      run: /opt/build.sh --build-openvidu-testapp
    - continue-on-error: true
      name: Build openvidu-server dashboard
      run: /opt/build.sh --build-openvidu-server-dashboard true
    - continue-on-error: true
      name: Build openvidu-server
      run: /opt/build.sh --build-openvidu-server
    - continue-on-error: true
      name: openvidu-server unit tests
      run: /opt/openvidu-e2e-tests.sh --openvidu-server-unit-tests
    - continue-on-error: true
      name: openvidu-server integration tests
      run: /opt/openvidu-e2e-tests.sh --openvidu-server-integration-tests
    - continue-on-error: true
      name: Environment launch Kurento
      run: /opt/openvidu-e2e-tests.sh --environment-launch-kurento
    - continue-on-error: true
      name: Serve openvidu-testapp
      run: /opt/test-utils.sh --serve-openvidu-testapp
    - continue-on-error: true
      name: OpenVidu E2E Tests Kurento
      run: /opt/openvidu-e2e-tests.sh --openvidu-e2e-tests-kurento
    - continue-on-error: true
      if: always()
      name: Test reports
      uses: mikepenz/action-junit-report@v3
      with:
        report_paths: '**/target/surefire-reports/TEST-*.xml'
    - continue-on-error: true
      if: always()
      name: Upload logs
      uses: actions/upload-artifact@v3
      with:
        name: Logs
        path: '/opt/openvidu/*.log

          '
name: OpenVidu CE Tests
on:
  repository_dispatch:
    types: trigger-ga___openvidu-ce-test.yml
